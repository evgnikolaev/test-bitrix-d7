<? /*

	https://academy.1c-bitrix.ru/education/?COURSE_ID=85&INDEX=Y

D7. Введение


	1 -2 ) почему и зачем
	        d7-новая идеология.  Не все методы можно заменить на d7.  Новый подход к API:
	            - Теперь все стандартизовано
	            - использование ORM
	            - ООП подход
	         Новые сущности:
	            - .settings
	            - local
				- компоненты на классах



    3) .settings.php - параметры ядра. (нет визуального редактирования)
            dbconn.php - в старом ядре. Используем оба файла.
		.settings.php - для редактирования есть API ( \Bitrix\Main\Config )
		Набор секций не ограничен, можно задавать свои. Основные:
			 cache - за настроки кеширования.
			 exeption_handling- за обработку ошибок
			 connection- параметры соединения с БД.



	4) Папка local
		Удобно для git(исключений меньше) и изолированность проекта.
		 структура local:
			 activities     - действия бизнес процесса
	         components     - компоненты
			 gadgets        - гаджеты рабочего стола
			 modules        - модули
			 php_interface  - только папки
			    user_lang
			    init.php
            templates       - шаблоны
       local приоритетнее bitrix. Шаболны, сущности лучше перемещать, а не копировать.



	5) Компоненты на классах
		Возможность наследования компонентов.
        Вместо component.php используем class.php
		Пример - local/components/academy/class и local/components/academy/class.extends (наследованный компонент)
        /test-d7vv/


	6) Пространства имен
            Каждый модуль определяет свое пространство имен, совпадающее с именем модуля.
            Например: модуль main \Bitrix\Main\
                     модуль форум \Bitrix\Forum\

            Использование:
	            use \Bitrix\Main\Localization\Loc;
	            use \Academy\Oop\Loc;
			даст ошибку, поэтому используем алиасы
                use \Academy\Oop\Loc as LC;


	7) ООП и модули
        lib - автоматическая загрузка. Правила:
                                    1) один файл, один класс
                                    2) Имя файла = имя класса
                                    2) Имя файла = имя класса

		!! Если же имя класса не совпадает с именем файла, или мы разместили несколько классов в файле
            Можно в файле include.php подключить класс при помощи:
					\Bitrix\Main\Loader::registerAutoLoadClasses('academy.oop',[
						'\Academy\Oop\globalMenu'=>'/lib/old.php'
					]);



	9) Отказ от работы с глобальными переменными
        /test-d7vv/
			Это принцип OOP, четко разделен на блоки, объединенные по смыслу, которые взаимодействуют между собой.
            Но глобальная переменная доступна во всех классах, и может изменятся в любом месте.


	10) Языковые файлы
            в d7 отложенная загрузка. Имена языковых констант должны быть уникальными!



    11) Исключения

            Это не типичная ситуация, при которой нет смысла продолжать базовый алгоритм
            Например, если метод ожидает число, а мы передели строку. Метод не знает что делать со строкой.
			Выполнение страницы прерывается. Показ отладки в файле .settings.php
			/test-d7vv/

    12) ORM

        ORM - объектно-реляционное отображение. Позволяет связать БД с концепциями ООП.
        Создает виртуальную БД.

        !!! Единообразие, постепенно все таблицы переписываются на d7.
	        (в старом ядре разные параметры, недоговоренности, не у всех методов етсь события, разный резултат)
	        в старом ядре - CGroup:GetList($by,$order,$filter).
	                      CIBlockElement:GetList($sort, $order, $filter, $group, $page, $order).

	        (Все стандартизовано)
	        в новом ядре - \Bitrix\Iblock\GroupTable::getList(['select' => ...,'filter' => ..., ...  ]);
	                      \Bitrix\Iblock\ElementTable::getList(['select' => ...,'filter' => ..., ...  ]);

		!!! События тоже стандартизованы. Их 9. В старом ядре же каких то событий и вовсе может не быть.

        !!!Ошибки при разработке. В старом ядре прощались неявные соглашения.
            Например В фильтре ошиблись записью, в старом ядре вернуться все записи.
            CUser::getList($by, $order, ['IDs'=>1]);
            В новом ядре API  будет ошибка.

		!! Хак для автоматизации ORM
            Админка->Таблицы передаем get-параметр orm=y, то у каждой таблицы дополнительно появится еще один пункт ORM.
            Это описание таблиц getMap().


	13) d7 форматирован в PHPDoc. Используя спец софт можно документировать.

    14) Старое и новое ядро





*/ ?>

